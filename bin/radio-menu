#!/usr/bin/env bash
#
#set -x

RADIO_DIR=${XDG_CONFIG_HOME}/radio
RADIO_LOG=${RADIO_DIR}/.history.log

#RAINBOW_MENU=y

[ -d "$RADIO_DIR" ] || { echo "Error: $RADIO_DIR not found."; exit 1; }

B62=($(echo {0..9} {a..z} {A..Z}))

_hit_any_key() {
    echo
    read -sn 1 -p "Hit any key to continue... "
}

#RADIO=($(ls $RADIO_DIR))
readarray RADIO < <(cd $RADIO_DIR && ls *.{m3u,pls})

_get_rainbow_menu() {
    fmt="%2s: \033[38;5;%im%-24s\033[0m\n"
    color=130
    menu=''
    printf "Please select:\n\n"
    for i in ${!RADIO[@]}; do 
        menu+=$(printf "$fmt" ${B62[$i]} "$color" "${RADIO[$i]}")
        [ "$color" -le 160 ] && let color++ || color=130
    done
    echo $menu | column
}

_get_menu() {
    printf "Please select:\n\n"
    #tput setaf 3
    for i in ${!RADIO[@]}; do 
        #printf "%3x: %-24s\n" $(expr $i + 1) ${RADIO[$i]}
        printf "%2s: %-24s\n" ${B62[$i]} ${RADIO[$i]}
    done | column
    #tput sgr0
}

shopt -s extglob

while true; do
    clear
    [ "$RAINBOW_MENU" ] && _get_rainbow_menu || _get_menu
    echo
    read -rsn1 -p "/[0-9a-zA-Z]|.|Q/ > " OPTION
    echo
    case $OPTION in
        Q)
            break
            ;;
        H|L)
            cat ${RADIO_LOG} | column -t --table-columns DATE,TIME,STATION -s ';'
            _hit_any_key
            continue
            ;;
        $'\x09') # TAB
            cat $RADIO_LOG
            ;;
        +([0-9a-zA-Z]))
            #IDX=$(($OPTION - 1))
            IDX=$((62#$OPTION))
            if [ ${RADIO[$IDX]} ]; then
                printf "\033[38;5;222m%s\033[0m\n" ${RADIO[$IDX]%.*}
                echo 'Source:'
                tput setaf 8
                cat ${RADIO_DIR}/${RADIO[$IDX]}
                tput sgr0
                echo
                read -sn1 -p 'Scrobble? [Y/n] > ' PROFILE
                [ "$PROFILE" == "n" ] && P=radio || P=music
                printf "%s;%s;%s\n" $(date "+%F %T") ${RADIO[$IDX]} >>${RADIO_LOG}
                mpv --profile=${P} ${RADIO_DIR}/${RADIO[$IDX]}
            else
                echo 'Not found.'
            fi
            _hit_any_key
            continue
            ;;
        *)
            echo "Invalid entry."
            _hit_any_key
            continue
            ;;
    esac
done
